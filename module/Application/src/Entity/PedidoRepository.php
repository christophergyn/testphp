<?php

namespace Application\Entity;

/**
 * PedidoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PedidoRepository extends \Doctrine\ORM\EntityRepository{
    
    /**
     * Lista de pedidos por data de emissão.
     * 
     * @param string $dataInicio
     * @param string $dataFim
     * @return array
     */
    public function listPedidoPorPeriodoDeEmissao(string $dataInicio, string $dataFim){
        $qb = $this->createQueryBuilder('p');
        return $qb->select('p, c')->innerJoin('p.codClien', 'c')->where('(p.dataPed between :dtIni and  :dtFim)')
                ->setParameter('dtIni', $dataInicio)->setParameter('dtFim', $dataFim)->getQuery()->getArrayResult();
    }
    
    /**
     * Lista de pedidos por data de baixa.
     * 
     * @param string $dataInicio
     * @param string $dataFim
     * @return array
     */
    public function listPedidoPorPeriodoDeBaixa(string $dataInicio, string $dataFim){
        $qb = $this->createQueryBuilder('p');
        return $qb->select('p, c')->innerJoin('p.codClien', 'c')->where('(p.dtmovtoPed between :dtIni and  :dtFim)')
                ->setParameter('dtIni', $dataInicio)->setParameter('dtFim', $dataFim)->getQuery()->getArrayResult();
    }
    
    /**
     * Lista de pedidos por data de emissão.
     * 
     * @param string $dataInicio
     * @param string $dataFim
     * @return array
     */
    public function listVendasPorPeriodoDeEmissao(string $dataInicio, string $dataFim){
        $where = '(p.dataPed between :dtIni and  :dtFim) and (p.statusPed in (\''.
                \Application\Utils\UtilConstantes::STATUS_PEDIDO.'\',\''.
                \Application\Utils\UtilConstantes::STATUS_FATURADO.'\'))';
        $qb = $this->createQueryBuilder('p');
        return $qb->select('p, c')->innerJoin('p.codClien', 'c')->where($where)
                ->setParameter('dtIni', $dataInicio)->setParameter('dtFim', $dataFim)->getQuery()->getArrayResult();
    }
    
    /**
     * Lista de pedidos por data de baixa.
     * 
     * @param string $dataInicio
     * @param string $dataFim
     * @return array
     */
    public function listVendasPorPeriodoDeBaixa(string $dataInicio, string $dataFim){
        $where = '(p.dtmovtoPed between :dtIni and  :dtFim) and (p.statusPed in (\''.
                \Application\Utils\UtilConstantes::STATUS_PEDIDO.'\',\''.
                \Application\Utils\UtilConstantes::STATUS_FATURADO.'\'))';
        $qb = $this->createQueryBuilder('p');
        return $qb->select('p, c')->innerJoin('p.codClien', 'c')->where($where)
                ->setParameter('dtIni', $dataInicio)->setParameter('dtFim', $dataFim)->getQuery()->getArrayResult();
    }
    
    /**
     * Pega último pedido salvo
     * 
     * @return Pedido
     */
    public function findUltimoPedido(){
        $qb = $this->createQueryBuilder('p');
        $qb->setMaxResults( 1 );
        $qb->orderBy('p.codPed', 'desc');

        return $qb->getQuery()->getOneOrNullResult();        
    }
    
    public function updateClienteCondPagamentoVendedor(int $pedidoId, int $clienteId, int $vendedorId, int $condpagtoId){
        $qb = $this->createQueryBuilder('p');
        $q = $qb->update()
            ->set('p.codClien', ':clienteId')->set('p.codCondpagto', ':condpagtoId')
            ->set('p.codVend', ':vendedorId')->where('p.codPed = :pedidoId')
            ->setParameter('clienteId', $clienteId)->setParameter('condpagtoId', $condpagtoId)
            ->setParameter('vendedorId', $vendedorId)->setParameter('pedidoId', $pedidoId)
            ->getQuery();
        return $q->execute();
    }    
}
