<?php

namespace DoctrineORMModule\Proxy\__CG__\Application\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Banco extends \Application\Entity\Banco implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Application\\Entity\\Banco' . "\0" . 'codBco', '' . "\0" . 'Application\\Entity\\Banco' . "\0" . 'numeroBco', '' . "\0" . 'Application\\Entity\\Banco' . "\0" . 'descBco', '' . "\0" . 'Application\\Entity\\Banco' . "\0" . 'statusBco', '' . "\0" . 'Application\\Entity\\Banco' . "\0" . 'ddelete', '' . "\0" . 'Application\\Entity\\Banco' . "\0" . 'usuario', '' . "\0" . 'Application\\Entity\\Banco' . "\0" . 'programa', '' . "\0" . 'Application\\Entity\\Banco' . "\0" . 'estacao', '' . "\0" . 'Application\\Entity\\Banco' . "\0" . 'codFil'];
        }

        return ['__isInitialized__', '' . "\0" . 'Application\\Entity\\Banco' . "\0" . 'codBco', '' . "\0" . 'Application\\Entity\\Banco' . "\0" . 'numeroBco', '' . "\0" . 'Application\\Entity\\Banco' . "\0" . 'descBco', '' . "\0" . 'Application\\Entity\\Banco' . "\0" . 'statusBco', '' . "\0" . 'Application\\Entity\\Banco' . "\0" . 'ddelete', '' . "\0" . 'Application\\Entity\\Banco' . "\0" . 'usuario', '' . "\0" . 'Application\\Entity\\Banco' . "\0" . 'programa', '' . "\0" . 'Application\\Entity\\Banco' . "\0" . 'estacao', '' . "\0" . 'Application\\Entity\\Banco' . "\0" . 'codFil'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Banco $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getCodBco()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getCodBco();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCodBco', []);

        return parent::getCodBco();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumeroBco($numeroBco)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumeroBco', [$numeroBco]);

        return parent::setNumeroBco($numeroBco);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumeroBco()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumeroBco', []);

        return parent::getNumeroBco();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescBco($descBco)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescBco', [$descBco]);

        return parent::setDescBco($descBco);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescBco()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescBco', []);

        return parent::getDescBco();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatusBco($statusBco)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatusBco', [$statusBco]);

        return parent::setStatusBco($statusBco);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatusBco()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatusBco', []);

        return parent::getStatusBco();
    }

    /**
     * {@inheritDoc}
     */
    public function setDdelete($ddelete)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDdelete', [$ddelete]);

        return parent::setDdelete($ddelete);
    }

    /**
     * {@inheritDoc}
     */
    public function getDdelete()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDdelete', []);

        return parent::getDdelete();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsuario($usuario)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsuario', [$usuario]);

        return parent::setUsuario($usuario);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsuario()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsuario', []);

        return parent::getUsuario();
    }

    /**
     * {@inheritDoc}
     */
    public function setCodBco($codBco)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCodBco', [$codBco]);

        return parent::setCodBco($codBco);
    }

    /**
     * {@inheritDoc}
     */
    public function setPrograma($programa)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrograma', [$programa]);

        return parent::setPrograma($programa);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrograma()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrograma', []);

        return parent::getPrograma();
    }

    /**
     * {@inheritDoc}
     */
    public function setEstacao($estacao)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEstacao', [$estacao]);

        return parent::setEstacao($estacao);
    }

    /**
     * {@inheritDoc}
     */
    public function getEstacao()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEstacao', []);

        return parent::getEstacao();
    }

    /**
     * {@inheritDoc}
     */
    public function setCodFil(\Application\Entity\Filial $codFil = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCodFil', [$codFil]);

        return parent::setCodFil($codFil);
    }

    /**
     * {@inheritDoc}
     */
    public function getCodFil()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCodFil', []);

        return parent::getCodFil();
    }

    /**
     * {@inheritDoc}
     */
    public function toArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', []);

        return parent::toArray();
    }

    /**
     * {@inheritDoc}
     */
    public function arrayToObject($data = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'arrayToObject', [$data]);

        return parent::arrayToObject($data);
    }

}
